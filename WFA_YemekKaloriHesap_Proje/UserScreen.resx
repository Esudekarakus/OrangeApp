<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sqlCommandBuilder1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAYEBAUEBAYFBQUGBgYHCQ4JCQgICRINDQoOFRIWFhUSFBQX
        GiEcFxgfGRQUHScdHyIjJSUlFhwpLCgkKyEkJST/2wBDAQYGBgkICREJCREkGBQYJCQkJCQkJCQkJCQk
        JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCT/wAARCAGCAkQDAREAAhEBAxEB/8QA
        HAABAQEAAgMBAAAAAAAAAAAAAAECBQcDBAYI/8QATRAAAgECAwUFBQQGBQgLAQAAAAECAxEEBSEGEjFB
        UWFxgZGhBxMisdEUMlLBCBUjQmJyQ4KSsvBEU2OTosLS8RYXJCU0NlRWc3TD4f/EABsBAQEAAgMBAAAA
        AAAAAAAAAAABBAYCAwUH/8QAOhEBAAEDAQQHCAEDAwQDAAAAAAECAxEEBRIhMRNBUWFxsdEGIjKBkaHB
        4fAUM/FCUnIVFiNiJDRD/9oADAMBAAIRAxEAPwD9UgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        Fh5u1nG8krPx+R6Gpi1XZm5XG9ERl4uzKtXZ1cWLNU0V1TFM9sZl3RgcHTwGGjQpzqTa4zqScpTfNtvm
        aHerm5VvTw/D7VprEWbcURMz2zM5mZ7ZmXsnVh3uvttPZ59pc8xyamlVfxVMNHRS6uPb2Gx7L2zu4tai
        eHVPq0P2g9lukzqdFHHrp7e+PT6Os5wlTm4Ti4yi7NNWaZtcTExmHzyYmmcTwmGGclhlhyKur3vxK4ha
        Ox402ndNp9gc+cPKpxqffVn+JfmTDrmmY5LKEoPVceD6jKZieSoS4y3HUjjL6n2fbZ4rYXaKhmFKUp4e
        TVPFUU9KlN8fFcV2ro2cqKt2csjRaurT3Yrjl1+D9c4PGUMwwlHGYWrGrQrwjUp1I8JRaun5GZHFvFNU
        VUxVTyl5iuQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4XaTafDZBR3Xaripq8
        KSfq+i+Z5e0tqW9HTjnVPKPV6Oz9nV6qrPKmOcusswzTFZtipYjF1XUm+HSK6JckaHqdTd1NfSXZzP8A
        OTc7Gmt2KNy3GIesn9Tow7Wt76hF3rAw1f6CUwqfzCYVSuRMNJ+mpMCp2JPBFT006FRpP6AVO9iYRxeZ
        7O5ZmdVYjEYOEq0bP3kW4S04O8WmZVjW37NO7RVw7Ofm87VbH0Wqr379uJq7YzE/WJiXI4edoxg224qy
        bd2zFnm9GaN2MQ8298ji4tX1t4CYyj5zajYfAbSRlWjbDY22leK+92SXPv4npaDat3S+7PGns9Gv7Y9n
        dPtCN+Pdudsdfj2+bqbPdncx2exHucdQcU38FWOsJ9z/AC4m5aXW2tTTvW5+XXD5jtDZep0Fe5fpx2T1
        T4T/ACXFMy2DBLWKCxzeNhzhUCXnU2oR5rg0/wDHaTDpmnjLSVPd3lvPs6EcMznCqfJKyCTCoJL9Dfo8
        bWSzDJ8Vs7iajlVwD99Qu/6GT1S/ll/eRkWauGGzbD1O9RNmrnHLwdwHe94AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAA4Lanaejs/hUoqNTF1F+zpt8P4n2fM8ram06dHRiONU8o/MvT2bs
        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
        YLlBWv39T27dmi1G7bjENZv6i7fq37tUzPe8jOx0sMDLAyyBGrOH3Jyj3OxR7FDGZm3+wq4mfYryA5zK
        q2bzqJYulH3XOU0oy8l9AOXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAaT4pMDLpU3xhHyA8VXA4avBwq0Kc4vjGUbolVMVRiqMuVNVVM5pnEuLxGxOzuKbdTKcPFvi6d6
        f91owq9m6WvnRHy4eTOt7W1lvlcn58fPLjq3sv2aqu8cNXp/y1pfncxqtiaWeUTHzZlHtFraedUT8oev
        /wBUuz348d/rV/wnD/oOm7Z+v6dv/c2s7Kfp+24eynZyNt6OLnb8Vbj5I5U7D0sc4mfm41e0mtnlMR8n
        t0PZxs1h9Y5epP8A0k3P53MijZWlo5UecsW5tvXV87k/LEeUOSobN5bhI7uHoRorpTior0RmUWqLfCim
        I8IeddvXLs5uVTPjOXl/UuF61PM7HWn6kwv+kf8AWAv6jwf4Z/2gH6kwX+bk/wCswNLJcAv6C/fKX1A0
        sowK/wAmh43YG45fg48MLR/sIDyxoUofcpU490UgNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//9k=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>